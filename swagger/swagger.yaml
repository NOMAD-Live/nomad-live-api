# this is a draft of the NOMAD Live API
swagger: '2.0'
info:
  title: NOMAD Live API
  description: 'Share the action, be the motion.'
  version: '0.1.0'
# Domain of the service
host: api.nomadlive.tv
# Array of all schemes that the API supports
schemes:
  - http
# Prefixed to all paths
basePath: /
produces:
  - application/json
paths:

  /streams:

    get:
      summary: Stream Informations List
      description: |
        Get the full list of existing streams.
      tags:
        - Streams
      responses:
        200:
          description: An array of Streams.
          schema:
            $ref: '#/definitions/Streams'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /streams/clean:
    get:
      summary: Clean Streams
      description: |
        Destroys all the Streams that did not report in the last 15 seconds.
      tags:
        - Heartbeat
        - Streams
      responses:
        200:
          description: A Heartbeat object including the Streams to destroy.
          schema:
            $ref: '#/definitions/Heartbeats'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /streams/sync:
    get:
      summary: Synchronise Streams
      description: |
        Synchronise the cached Streams with Cine.IO.
      tags:
        - Streams
      responses:
        200:
          description: A Heartbeat object including the stream_id and the last_beat.
          schema:
            $ref: '#/definitions/Heartbeats'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /stream/{stream_id}:
    get:
      summary: Get Info on a Stream
      description: |
        Gives information on a single Stream.
      parameters:

        - name: stream_id
          in: path
          description: ID of the desired stream.
          required: true
          type: string

      tags:
        - Streams
      responses:
        201:
          description: A Stream object including the stream_id and the password.
          schema:
            $ref: '#/definitions/Stream'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: Heartbeat a Stream
      description: |
        Gives a signal to the server to prevent the stream from deletion.
      parameters:

        - name: stream_id
          in: path
          description: ID of the stream you want to signal.
          required: true
          type: string

        - name: p
          in: query
          description: Password protecting the stream.
          required: false
          type: string

        - name: password
          in: query
          description: Password protecting the stream.
          required: false
          type: string

      tags:
        - Streams
        - Heartbeat
      responses:
        200:
          description: The deleted Stream object.
          schema:
            $ref: '#/definitions/Heartbeat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Delete a Stream
      description: |
        Get information on existing streams.
        The password should be in the query with either
        the variable p or the variable password.
      parameters:

        - name: stream_id
          in: path
          description: ID of the stream you want to delete.
          required: true
          type: string

        - name: p
          in: query
          description: Password to destroy the stream.
          required: false
          type: string

        - name: password
          in: query
          description: Password to destroy the stream.
          required: false
          type: string

      tags:
        - Streams
      responses:
        200:
          description: The deleted Stream object.
          schema:
            $ref: '#/definitions/Stream'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


definitions:

  Stream:
    properties:
      id:
        type: string
        description: Unique identifier representing a specific stream.
      streamName:
        type: string
        description: Friendly display name of stream.
      play:
        properties:
          hls:
            type: string
            description: HLS url to read the stream from.
          rtmp:
            type: string
            description: RTMP url to read the stream from.
      publish:
        properties:
          url:
            type: string
            description: RTMP url to broadcast the stream to.
          stream:
            type: string
            description: Stream name with its password (m15vuUK-e?music59).
      password:
        type: string
        description: the password preventing anyone to broadcast.
      expiration:
        type: string
        description: 'A date with the following format : 2035-06-21T00:00:00.000Z'
      record:
        type: boolean
        description: Wether or not to record the stream.
      assignedAt:
        type: string
        description: 'A date with the following format : 2015-06-21T22:09:35.920Z'

  Streams:
    type: array
    items:
      $ref: '#/definitions/Stream'

  Heartbeat:
    properties:
      id:
        type: string
        description: Unique identifier representing a specific stream.
      last_beat:
        type: number
        description: Last time the broadcaster reported (Date.now()).

  Heartbeats:
    type: array
    items:
      $ref: '#/definitions/Heartbeat'

  Error:
    properties:
      code:
        type: string
      message:
        type: string